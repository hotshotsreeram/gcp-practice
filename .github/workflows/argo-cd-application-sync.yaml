name: Deploy to Argo CD

on:
  workflow_dispatch: {}
  push:
    branches:
    - main # Change this to your main branch name
    paths:
    - 'charts/my-parent-chart/**'
    - '.github/workflows/argo-cd-application-sync.yaml'

env:
  GKE_CLUSTER: my-cluster
  GKE_ZONE:  northamerica-northeast2	

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Argo CD CLI
        run: |
          curl -LO https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x argocd-linux-amd64
          sudo mv argocd-linux-amd64 /usr/local/bin/argocd

      - name: Log in to Argo CD
        run: argocd login --insecure --username admin --password ${{ secrets.ARGOCD_PASSWORD }} 34.130.228.239

      - name: Sync Argo CD Application
        run: argocd app sync practice-argocd-application

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS_JSON }}

      - uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }} 

      - name: Check pod status
        run: |
          POD_STATUS=$(kubectl get pods -n practice -o jsonpath='{range .items[*]}{.status.phase}{"\n"}{end}')
          echo "Pod Status: $POD_STATUS"
          if [[ "$POD_STATUS" != *"Running"* ]]; then
            echo "Pod deployment failed: Pod is not running."
            exit 1
          fi

      - name: Set deployment status output
        run: |
          echo "Deployment Status: $( steps.check-pods.outputs.deployment_status)"
        
      - name: Fail workflow if deployment failed
        if: steps.check-pods.outputs.deployment_status != 'running'
        run: exit 1

